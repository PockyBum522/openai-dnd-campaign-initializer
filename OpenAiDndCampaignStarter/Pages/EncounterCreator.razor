@page "/encounter-creator"

<PageTitle>Encounter Creator</PageTitle>

@using OpenAiDndCampaignStarter.Data.Logic
@using System.Security.Cryptography
@using Humanizer

@inject IOpenAiRequestor OpenAiRequestor;

<h1>Encounter Creator</h1>

@if (_encounterAreaDescription == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <br/><br/><br/>
    
    <p>
        <h3>Encounter Area Description:</h3>
        @_encounterAreaDescription
    </p>
    
    <p>
        <h3>Visible Monsters:</h3>
        @_numberOfMonsters?.FirstCharToUpper() @_monsterType:
        @_monstersDescription
    </p>
    
    <p>
        <h3>Their Leader:</h3>
        @_monstersLeaderDescription
    </p>
        
    <p>
        <h3>Potential Unexpected Problems:</h3>
        @_enounterProblem
    </p>
}

@code {
    private string? _encounterAreaDescription;
    private string? _numberOfMonsters;
    private string? _monsterType;
    private string? _monstersDescription;
    private string? _monstersLeaderDescription;
    private string? _enounterProblem;

    protected override async Task OnInitializedAsync()
    {
        var numberOfMonsters = RandomNumberGenerator.GetInt32(1, 10);

        _numberOfMonsters = numberOfMonsters.ToWords();

        var randomMonster = MonsterTableHelpers.GetRandom5eMonster();

        // Pluralize if there are more than one monsters
        if (numberOfMonsters > 1)
        {
            _monsterType = randomMonster.CreatureName.Pluralize();
        }
        else
        {
            _monsterType = randomMonster.CreatureName;
        }

        var encounterAreaTask = OpenAiRequestor.GetTextCompletionAsync(
            "Topic: Description. Please give me a description of an area in the middle of a journey.");

        var encounterMonstersDescriptionTask = OpenAiRequestor.GetTextCompletionAsync(
            $"Topic: Description. Please give me a description of a group of {_numberOfMonsters} {_monsterType} monsters.");
        
        var encounterMonstersLeaderDescriptionTask = OpenAiRequestor.GetTextCompletionAsync(
            $"Topic: Description. Please give me a description of the leader of a group of {_monsterType} monsters.");

        var encounterProblemTask = OpenAiRequestor.GetTextCompletionAsync(
            $"Topic: Battle. Please give me a random reason why a medieval battle would suddenly get harder.");

        _enounterProblem = await encounterProblemTask;

        _monstersLeaderDescription = await encounterMonstersLeaderDescriptionTask;
        
        _monstersDescription = await encounterMonstersDescriptionTask;

        _encounterAreaDescription = await encounterAreaTask;
    }
}