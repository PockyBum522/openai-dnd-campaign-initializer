@page "/encounter-creator"

<PageTitle>Encounter Creator</PageTitle>

@using OpenAiDndCampaignStarter.Data
@using System.Text
@using System.Net.Http.Headers
@using OpenAiDndCampaignStarter.Data.Models
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq

<h1>Encounter Creator</h1>

@if (_finalResponse == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>Encounter Area Description:<br>
    @_finalResponse</p>
}

<h1>Raw JSON Response</h1>

@if (_jsonResponse == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>Encounter Area Description:<br>
    @_jsonResponse</p>
}

@code {
    private HttpClient? _httpClient;
    private string? _jsonResponse;

    private string? _finalResponse;

    protected override async Task OnInitializedAsync()
    {
        var requestModel = new OpenAiJsonRequest("Topic: Description. A description of a landscape in the middle of a journey");

        var jsonRequest = JsonConvert.SerializeObject(requestModel);
        
        //Create the request sender object
        _httpClient ??= new HttpClient();

        _jsonResponse = await PostHttpMessage("https://api.openai.com/v1/completions", jsonRequest);

        var choicesZero = ((dynamic)JObject.Parse(_jsonResponse)["choices"][0]);

        _finalResponse = choicesZero.text.ToString();
    }

    private async Task<string> PostHttpMessage(string url, string jsonMessage)
    {
        _httpClient.DefaultRequestHeaders.Authorization = 
            new AuthenticationHeaderValue("Bearer", Secrets.SECRET_API_KEY);
        
        _httpClient.Timeout = TimeSpan.FromSeconds(30);
        
        // Initialize the request content and Send the POST
        var response = await _httpClient.PostAsync(url, new StringContent(jsonMessage, Encoding.UTF8, "application/json"));

        //Check for error status
        response.EnsureSuccessStatusCode();

        //Get the response content
        return await response.Content.ReadAsStringAsync();
    }    

}